openapi: 3.0.1
info:
  title: Authentication API
  description: API for user authentication with JWT tokens
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: Authentication
    description: Authentication management API
paths:
  '/api/auth/signup':
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/SignupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/MessageResponse'
  '/api/auth/refresh':
    post:
      tags:
        - Authentication
      summary: Refresh token
      description: Get new access token using refresh token
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/TokenRefreshResponse'
  '/api/auth/logout':
    post:
      tags:
        - Authentication
      summary: User logout
      description: Revoke refresh tokens and log out the user
      operationId: logoutUser
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/MessageResponse'
      security:
        - bearerAuth: []
  '/api/auth/login':
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and return JWT tokens
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/JwtResponse'
  '/api/auth/me':
    get:
      tags:
        - Authentication
      summary: Current user
      description: Get the current authenticated user's information
      operationId: getCurrentUser
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/UserResponse'
      security:
        - bearerAuth: []
components:
  schemas:
    SignupRequest:
      required:
        - email
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 1
          type: string
        email:
          type: string
        password:
          maxLength: 40
          minLength: 6
          type: string
    MessageResponse:
      type: object
      properties:
        message:
          type: string
    TokenRefreshRequest:
      required:
        - refreshToken
      type: object
      properties:
        refreshToken:
          type: string
    TokenRefreshResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        tokenType:
          type: string
    LoginRequest:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    JwtResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        tokenType:
          type: string
        userId:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
  securitySchemes:
    bearerAuth:
      type: http
      name: bearerAuth
      scheme: bearer
      bearerFormat: JWT
